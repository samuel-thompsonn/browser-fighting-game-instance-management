AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  browser-fighting-game-lobby-management

  SAM template for lobby management API, used in the browser
  fighting game to create, modify, and list available lobbies.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:

  LobbyManagementApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Domain:
        DomainName: sam-thompson-test-development.link
        CertificateArn: arn:aws:acm:us-east-1:207922868512:certificate/a0cc1bdf-37fb-4f1b-bc02-48fa27503363
        Route53:
          HostedZoneId: Z01017512NE3I4SHEOPOV

  LobbyTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref LobbyTable
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
            RestApiId: !Ref LobbyManagementApi
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref LobbyTable
  GetAllLobbiesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/get_all_lobbies/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref LobbyTable
      Events:
        GetAllLobbies:
          Type: Api
          Properties:
            Path: /get_all_lobbies
            Method: get
            RestApiId: !Ref LobbyManagementApi
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref LobbyTable

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${LobbyManagementApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
  GetAllLobbiesFunction:
    Description: "GetAllLobbies endpoint Lambda ARN"
    Value: !GetAtt GetAllLobbiesFunction.Arn
  GetAllLobbiesFunctionIamRole:
    Description: "Implicit IAM Role created for GetAllLobbies function"
    Value: !GetAtt GetAllLobbiesFunctionRole.Arn
  DyamoDBTable:
    Description: "DynamoDB table created for Lambda access"
    Value: !Ref LobbyTable
